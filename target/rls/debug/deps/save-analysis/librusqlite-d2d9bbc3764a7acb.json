{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48],"program":"/home/chivier_humber/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","rusqlite","/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"bundled\"","--cfg","feature=\"libsqlite3-sys\"","-C","metadata=d2d9bbc3764a7acb","-C","extra-filename=-d2d9bbc3764a7acb","--out-dir","/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/deps","-L","dependency=/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/deps","--extern","bitflags=/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/deps/libbitflags-eef9e66be0be1eb9.rmeta","--extern","libsqlite3_sys=/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/deps/liblibsqlite3_sys-1c5f522a9e1043b6.rmeta","--extern","lru_cache=/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/deps/liblru_cache-862134b94764bce4.rmeta","--extern","time=/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/deps/libtime-b273bf2b073a3717.rmeta","--cap-lints","allow","-L","native=/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/build/libsqlite3-sys-d749a6856369d147/out","--error-format=json","--sysroot","/home/chivier_humber/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,68,111,99,117,109,101,110,116,115,47,83,116,117,100,121,47,79,83,72,95,76,65,66,47,108,97,98,50,47,114,117,115,116,115,104,101,108,108,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,114,117,115,113,108,105,116,101,45,100,50,100,57,98,98,99,51,55,54,52,97,55,97,99,98,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"rusqlite","disambiguator":[17060210224952775603,16133262286285128984]},"crate_root":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src","external_crates":[{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[853209657226342047,8462664850197014382]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[772178867720458397,10513760593670507587]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17633954781163668134,3962627684191718065]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7858001605524721373,8369385247697161108]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5226771781757675641,11183407964508506038]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15950205559580256541,6605390554280573401]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[5066653915378193616,7813142097187859454]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[1328488228804362593,9042026925657904388]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[3005442698276396085,7194037300925619286]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[11662190156692096384,12505544175813687064]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":11,"id":{"name":"bitflags","disambiguator":[2280885214615112702,12512304114620274195]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","num":12,"id":{"name":"libsqlite3_sys","disambiguator":[11646812554339277482,7160609107451907040]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/cache.rs","num":13,"id":{"name":"lru_cache","disambiguator":[42109386943961476,8751898643494886837]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/cache.rs","num":14,"id":{"name":"linked_hash_map","disambiguator":[9466000182041365908,13662845194356817687]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/types/time.rs","num":15,"id":{"name":"time","disambiguator":[17317893895970475433,8011789446373079134]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/types/time.rs","num":16,"id":{"name":"libc","disambiguator":[10729967568209802492,6456757852286002863]}}],"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":62855,"line_start":1,"line_end":1854,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2534,"byte_end":2543,"line_start":93,"line_end":93,"column_start":27,"column_end":36},"alias_span":null,"name":"Statement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2567,"byte_end":2578,"line_start":95,"line_end":95,"column_start":22,"column_end":33},"alias_span":null,"name":"AndThenRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":346},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2580,"byte_end":2590,"line_start":95,"line_end":95,"column_start":35,"column_end":45},"alias_span":null,"name":"MappedRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2592,"byte_end":2595,"line_start":95,"line_end":95,"column_start":47,"column_end":50},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2597,"byte_end":2605,"line_start":95,"line_end":95,"column_start":52,"column_end":60},"alias_span":null,"name":"RowIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":328},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2607,"byte_end":2611,"line_start":95,"line_end":95,"column_start":62,"column_end":66},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2644,"byte_end":2656,"line_start":97,"line_end":97,"column_start":30,"column_end":42},"alias_span":null,"name":"DropBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":540},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2658,"byte_end":2667,"line_start":97,"line_end":97,"column_start":44,"column_end":53},"alias_span":null,"name":"Savepoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":538},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2669,"byte_end":2680,"line_start":97,"line_end":97,"column_start":55,"column_end":66},"alias_span":null,"name":"Transaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1068},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2682,"byte_end":2701,"line_start":97,"line_end":97,"column_start":68,"column_end":87},"alias_span":null,"name":"TransactionBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1056},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2727,"byte_end":2732,"line_start":99,"line_end":99,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":12,"index":130},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2754,"byte_end":2763,"line_start":100,"line_end":100,"column_start":21,"column_end":30},"alias_span":null,"name":"ErrorCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2788,"byte_end":2803,"line_start":102,"line_end":102,"column_start":23,"column_end":38},"alias_span":null,"name":"CachedStatement","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2829,"byte_end":2830,"line_start":103,"line_end":103,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"version_number","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":152295,"byte_end":152302,"line_start":58,"line_end":58,"column_start":26,"column_end":33},"alias_span":null,"name":"FromSql","value":"","parent":{"krate":0,"index":624}},{"kind":"Use","ref_id":{"krate":0,"index":1092},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":152304,"byte_end":152316,"line_start":58,"line_end":58,"column_start":35,"column_end":47},"alias_span":null,"name":"FromSqlError","value":"","parent":{"krate":0,"index":624}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":152318,"byte_end":152331,"line_start":58,"line_end":58,"column_start":49,"column_end":62},"alias_span":null,"name":"FromSqlResult","value":"","parent":{"krate":0,"index":624}},{"kind":"Use","ref_id":{"krate":0,"index":766},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":152357,"byte_end":152362,"line_start":59,"line_end":59,"column_start":24,"column_end":29},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":624}},{"kind":"Use","ref_id":{"krate":0,"index":1122},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":152364,"byte_end":152375,"line_start":59,"line_end":59,"column_start":31,"column_end":42},"alias_span":null,"name":"ToSqlOutput","value":"","parent":{"krate":0,"index":624}},{"kind":"Use","ref_id":{"krate":0,"index":1234},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":152399,"byte_end":152404,"line_start":60,"line_end":60,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":624}},{"kind":"Use","ref_id":{"krate":0,"index":1274},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":152431,"byte_end":152439,"line_start":61,"line_end":61,"column_start":26,"column_end":34},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":624}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":62855,"line_start":1,"line_end":1854,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":52},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":92},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":148},{"krate":0,"index":212},{"krate":0,"index":254},{"krate":0,"index":302},{"krate":0,"index":396},{"krate":0,"index":528},{"krate":0,"index":624},{"krate":0,"index":894},{"krate":0,"index":904},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":924},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":1314},{"krate":0,"index":1320},{"krate":0,"index":1316},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":942},{"krate":0,"index":982},{"krate":0,"index":986},{"krate":0,"index":1322},{"krate":0,"index":1358},{"krate":0,"index":1352},{"krate":0,"index":1348},{"krate":0,"index":1344},{"krate":0,"index":1332},{"krate":0,"index":1328},{"krate":0,"index":1324},{"krate":0,"index":1360},{"krate":0,"index":1386},{"krate":0,"index":1390},{"krate":0,"index":1394},{"krate":0,"index":1398},{"krate":0,"index":1402},{"krate":0,"index":1470},{"krate":0,"index":1476},{"krate":0,"index":1480},{"krate":0,"index":1486},{"krate":0,"index":1490},{"krate":0,"index":1496},{"krate":0,"index":1500},{"krate":0,"index":1506},{"krate":0,"index":1510},{"krate":0,"index":1516},{"krate":0,"index":1520},{"krate":0,"index":988},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1004},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1044}],"decl_id":null,"docs":" Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to\n expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","sig":null,"attributes":[{"value":"allow(unknown_lints)","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1814,"byte_end":1838,"line_start":63,"line_end":63,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,98,117,115,121,46,114,115],"byte_start":63700,"byte_end":63712,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"busy_timeout","qualname":"<Connection>::busy_timeout","value":"fn (&self, timeout: Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a busy handler that sleeps for a specified amount of time when a\n table is locked. The handler will sleep multiple times until at\n least \"ms\" milliseconds of sleeping have accumulated.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,98,117,115,121,46,114,115],"byte_start":64989,"byte_end":65001,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"busy_handler","qualname":"<Connection>::busy_handler","value":"fn (&self, callback: Option<fn(i32) -> bool>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Register a callback to handle `SQLITE_BUSY` errors.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":70588,"byte_end":70602,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"prepare_cached","qualname":"<Connection>::prepare_cached","value":"fn <'a> (&'a self, sql: &str) -> Result<CachedStatement<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution, returning a previously prepared\n (but not currently in-use) statement if one is available. The\n returned statement will be cached for reuse by future calls to\n `prepare_cached` once it is dropped.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":71036,"byte_end":71073,"line_start":45,"line_end":45,"column_start":12,"column_end":49},"name":"set_prepared_statement_cache_capacity","qualname":"<Connection>::set_prepared_statement_cache_capacity","value":"fn (&self, capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of cached prepared statements this connection\n will hold. By default, a connection will hold a relatively small\n number of cached statements. If you need more, or know that you\n will not use cached statements, you\n can set the capacity manually using this method.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":71232,"byte_end":71262,"line_start":50,"line_end":50,"column_start":12,"column_end":42},"name":"flush_prepared_statement_cache","qualname":"<Connection>::flush_prepared_statement_cache","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove/finalize all prepared statements currently in the cache.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":71605,"byte_end":71620,"line_start":63,"line_end":63,"column_start":12,"column_end":27},"name":"CachedStatement","qualname":"::cache::CachedStatement","value":"CachedStatement {  }","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29}],"decl_id":null,"docs":" Cacheable statement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":72601,"byte_end":72608,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"discard","qualname":"<CachedStatement<'conn>>::discard","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Discard the statement, preventing it from being returned to its\n `Connection`'s collection of cached statements.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":377},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":79662,"byte_end":79675,"line_start":14,"line_end":14,"column_start":5,"column_end":18},"name":"SqliteFailure","qualname":"::error::Error::SqliteFailure","value":"Error::SqliteFailure(ffi::Error, Option<String>)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" An error from an underlying SQLite call.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":79840,"byte_end":79864,"line_start":18,"line_end":18,"column_start":5,"column_end":29},"name":"SqliteSingleThreadedMode","qualname":"::error::Error::SqliteSingleThreadedMode","value":"Error::SqliteSingleThreadedMode","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error reported when attempting to open a connection when SQLite was\n configured to allow single-threaded use only.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":385},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":80000,"byte_end":80024,"line_start":22,"line_end":22,"column_start":5,"column_end":29},"name":"FromSqlConversionFailure","qualname":"::error::Error::FromSqlConversionFailure","value":"Error::FromSqlConversionFailure(usize, Type, Box<dyn error::Error + Send + Sync>)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but it cannot\n be converted to the requested Rust type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":393},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":80350,"byte_end":80373,"line_start":28,"line_end":28,"column_start":5,"column_end":28},"name":"IntegralValueOutOfRange","qualname":"::error::Error::IntegralValueOutOfRange","value":"Error::IntegralValueOutOfRange(usize, i64)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error when SQLite gives us an integral value outside the range of the\n requested type (e.g., trying to get the value 1000 into a `u8`).\n The associated `usize` is the column index,\n and the associated `i64` is the value returned by SQLite.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":399},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":80436,"byte_end":80445,"line_start":31,"line_end":31,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::error::Error::Utf8Error","value":"Error::Utf8Error(str::Utf8Error)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error converting a string to UTF-8.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":403},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":80573,"byte_end":80581,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"name":"NulError","qualname":"::error::Error::NulError","value":"Error::NulError(::std::ffi::NulError)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error converting a string to a C-compatible string because it contained\n an embedded nul.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":407},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":80717,"byte_end":80737,"line_start":39,"line_end":39,"column_start":5,"column_end":25},"name":"InvalidParameterName","qualname":"::error::Error::InvalidParameterName","value":"Error::InvalidParameterName(String)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error when using SQL named parameters and passing a parameter name not\n present in the SQL.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":411},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":80802,"byte_end":80813,"line_start":42,"line_end":42,"column_start":5,"column_end":16},"name":"InvalidPath","qualname":"::error::Error::InvalidPath","value":"Error::InvalidPath(PathBuf)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error converting a file path to a string.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":415},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":80889,"byte_end":80911,"line_start":45,"line_end":45,"column_start":5,"column_end":27},"name":"ExecuteReturnedResults","qualname":"::error::Error::ExecuteReturnedResults","value":"Error::ExecuteReturnedResults","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error returned when an `execute` call returns rows.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81042,"byte_end":81061,"line_start":49,"line_end":49,"column_start":5,"column_end":24},"name":"QueryReturnedNoRows","qualname":"::error::Error::QueryReturnedNoRows","value":"Error::QueryReturnedNoRows","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error when a query that was expected to return at least one row (e.g.,\n for `query_row`) did not return any.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":419},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81191,"byte_end":81209,"line_start":53,"line_end":53,"column_start":5,"column_end":23},"name":"InvalidColumnIndex","qualname":"::error::Error::InvalidColumnIndex","value":"Error::InvalidColumnIndex(usize)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the index\n is out of range for the statement.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":423},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81342,"byte_end":81359,"line_start":57,"line_end":57,"column_start":5,"column_end":22},"name":"InvalidColumnName","qualname":"::error::Error::InvalidColumnName","value":"Error::InvalidColumnName(String)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error when the value of a named column is requested, but no column\n matches the name for the statement.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":427},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81546,"byte_end":81563,"line_start":62,"line_end":62,"column_start":5,"column_end":22},"name":"InvalidColumnType","qualname":"::error::Error::InvalidColumnType","value":"Error::InvalidColumnType(usize, Type)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the type\n of the result in that column cannot be converted to the requested\n Rust type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":433},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":81689,"byte_end":81709,"line_start":66,"line_end":66,"column_start":5,"column_end":25},"name":"StatementChangedRows","qualname":"::error::Error::StatementChangedRows","value":"Error::StatementChangedRows(usize)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error when a query that was expected to insert one row did not insert\n any or insert many.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":437},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":82433,"byte_end":82455,"line_start":84,"line_end":84,"column_start":5,"column_end":27},"name":"ToSqlConversionFailure","qualname":"::error::Error::ToSqlConversionFailure","value":"Error::ToSqlConversionFailure(Box<dyn error::Error + Send + Sync>)","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error available for the implementors of the `ToSql` trait.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":441},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":82563,"byte_end":82575,"line_start":87,"line_end":87,"column_start":5,"column_end":17},"name":"InvalidQuery","qualname":"::error::Error::InvalidQuery","value":"Error::InvalidQuery","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":" Error when the SQL is not a `SELECT`, is not read-only.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1056},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":79601,"byte_end":79606,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{SqliteFailure, SqliteSingleThreadedMode, FromSqlConversionFailure, IntegralValueOutOfRange, Utf8Error, NulError, InvalidParameterName, InvalidPath, ExecuteReturnedResults, QueryReturnedNoRows, InvalidColumnIndex, InvalidColumnName, InvalidColumnType, StatementChangedRows, ToSqlConversionFailure, InvalidQuery}","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":393},{"krate":0,"index":399},{"krate":0,"index":403},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":427},{"krate":0,"index":433},{"krate":0,"index":437},{"krate":0,"index":441}],"decl_id":null,"docs":" Enum listing possible errors from rusqlite.\n","sig":null,"attributes":[{"value":"allow(clippy::enum_variant_names)","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":79555,"byte_end":79591,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":89634,"byte_end":89646,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"RawStatement","qualname":"::raw_statement::RawStatement","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":89704,"byte_end":89707,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<RawStatement>::new","value":"fn (stmt: *mut ffi::sqlite3_stmt) -> RawStatement","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":89808,"byte_end":89811,"line_start":16,"line_end":16,"column_start":19,"column_end":22},"name":"ptr","qualname":"<RawStatement>::ptr","value":"fn (&self) -> *mut ffi::sqlite3_stmt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":89880,"byte_end":89892,"line_start":20,"line_end":20,"column_start":12,"column_end":24},"name":"column_count","qualname":"<RawStatement>::column_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":89991,"byte_end":90002,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"column_type","qualname":"<RawStatement>::column_type","value":"fn (&self, idx: usize) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":90117,"byte_end":90128,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"column_name","qualname":"<RawStatement>::column_name","value":"fn (&self, idx: usize) -> &CStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":90259,"byte_end":90263,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"step","qualname":"<RawStatement>::step","value":"fn (&self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":90897,"byte_end":90902,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"reset","qualname":"<RawStatement>::reset","value":"fn (&self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":90985,"byte_end":91005,"line_start":57,"line_end":57,"column_start":12,"column_end":32},"name":"bind_parameter_count","qualname":"<RawStatement>::bind_parameter_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":91112,"byte_end":91132,"line_start":61,"line_end":61,"column_start":12,"column_end":32},"name":"bind_parameter_index","qualname":"<RawStatement>::bind_parameter_index","value":"fn (&self, name: &CStr) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":91361,"byte_end":91375,"line_start":69,"line_end":69,"column_start":12,"column_end":26},"name":"clear_bindings","qualname":"<RawStatement>::clear_bindings","value":"fn (&self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":91467,"byte_end":91470,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"sql","qualname":"<RawStatement>::sql","value":"fn (&self) -> &CStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":91567,"byte_end":91575,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"finalize","qualname":"<RawStatement>::finalize","value":"fn (mut self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":91820,"byte_end":91828,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"readonly","qualname":"<RawStatement>::readonly","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"bundled\")","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":91781,"byte_end":91808,"line_start":87,"line_end":87,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":91955,"byte_end":91967,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"expanded_sql","qualname":"<RawStatement>::expanded_sql","value":"fn (&self) -> Option<&CStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"bundled\")","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":91916,"byte_end":91943,"line_start":92,"line_end":92,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":328},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":92517,"byte_end":92521,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Rows","qualname":"::row::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":45}],"decl_id":null,"docs":" An handle for the resulting rows of a query.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":93401,"byte_end":93405,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"next","qualname":"<Rows<'stmt>>::next","value":"fn <'a> (&'a mut self) -> Option<Result<Row<'a, 'stmt>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get the next row from the query. Returns `Some(Ok(Row))` if\n there is another row, `Some(Err(...))` if there was an error\n getting the next row, and `None` if all rows have been retrieved.","sig":null,"attributes":[{"value":"allow(clippy::should_implement_trait)","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":93320,"byte_end":93360,"line_start":30,"line_end":30,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":94351,"byte_end":94361,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"MappedRows","qualname":"::row::MappedRows","value":"MappedRows {  }","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":95036,"byte_end":95047,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"AndThenRows","qualname":"::row::AndThenRows","value":"AndThenRows {  }","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":89}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query, with an Error type\n unifying with Error.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":95766,"byte_end":95769,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"Row","qualname":"::row::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":117}],"decl_id":null,"docs":" A single result row of a query.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":96388,"byte_end":96391,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"get","qualname":"<Row<'a, 'stmt>>::get","value":"fn <I, T> (&self, idx: I) -> T","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":97195,"byte_end":97206,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"get_checked","qualname":"<Row<'a, 'stmt>>::get_checked","value":"fn <I, T> (&self, idx: I) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":98582,"byte_end":98597,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"get_raw_checked","qualname":"<Row<'a, 'stmt>>::get_raw_checked","value":"fn <I> (&self, idx: I) -> Result<ValueRef<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":99671,"byte_end":99678,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"get_raw","qualname":"<Row<'a, 'stmt>>::get_raw","value":"fn <I> (&self, idx: I) -> ValueRef<'a>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":99843,"byte_end":99855,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Row<'a, 'stmt>>::column_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the current row.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":384},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":99997,"byte_end":100005,"line_start":231,"line_end":231,"column_start":11,"column_end":19},"name":"RowIndex","qualname":"::row::RowIndex","value":"RowIndex","parent":null,"children":[{"krate":0,"index":386}],"decl_id":null,"docs":" A trait implemented by types that can index into columns of a row.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":100112,"byte_end":100115,"line_start":234,"line_end":234,"column_start":8,"column_end":11},"name":"idx","qualname":"::row::RowIndex::idx","value":"fn (&self, stmt: &Statement<'_>) -> Result<usize>","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Returns the index of the appropriate column, or `None` if no such\n column exists.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":456},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":101082,"byte_end":101091,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"Statement","qualname":"::statement::Statement","value":"Statement {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":143}],"decl_id":null,"docs":" A prepared statement.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":101277,"byte_end":101289,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Statement<'conn>>::column_names","value":"fn (&self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names in the result set of the prepared statement.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":101707,"byte_end":101719,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Statement<'conn>>::column_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the result set returned by the prepared\n statement.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":102155,"byte_end":102167,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Statement<'conn>>::column_index","value":"fn (&self, name: &str) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the column index in the result set for a given column name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":103286,"byte_end":103293,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"execute","qualname":"<Statement<'conn>>::execute","value":"fn <P> (&mut self, params: P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":104494,"byte_end":104507,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Statement<'conn>>::execute_named","value":"fn (&mut self, params: &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s). If any\n parameters that were in the prepared statement are not included in\n `params`, they will continue to use the most-recently bound value\n from a previous call to `execute_named`, or `NULL` if they have\n never been bound.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":105198,"byte_end":105204,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"insert","qualname":"<Statement<'conn>>::insert","value":"fn <P> (&mut self, params: P) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Execute an INSERT and return the ROWID.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":106449,"byte_end":106454,"line_start":178,"line_end":178,"column_start":12,"column_end":17},"name":"query","qualname":"<Statement<'conn>>::query","value":"fn <'a, P> (&'a mut self, params: P) -> Result<Rows<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement, returning a handle to the resulting\n rows.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":107570,"byte_end":107581,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"query_named","qualname":"<Statement<'conn>>::query_named","value":"fn <'a> (&'a mut self, params: &[(&str, &dyn ToSql)]) -> Result<Rows<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning a\n handle for the resulting rows. If any parameters that were in the\n prepared statement are not included in `params`, they will continue\n to use the most-recently bound value from a previous\n call to `query_named`, or `NULL` if they have never been bound.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":108527,"byte_end":108536,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"query_map","qualname":"<Statement<'conn>>::query_map","value":"fn <'a, T, P, F> (&'a mut self, params: P, f: F) -> Result<MappedRows<'a, F>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, returning an iterator over the mapped function results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":109845,"byte_end":109860,"line_start":277,"line_end":277,"column_start":12,"column_end":27},"name":"query_map_named","qualname":"<Statement<'conn>>::query_map_named","value":"fn <'a, T, F> (&'a mut self, params: &[(&str, &dyn ToSql)], f: F) -> Result<MappedRows<'a, F>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows. If any parameters that were in the prepared statement\n are not included in `params`, they will continue to use the\n most-recently bound value from a previous call to `query_named`,\n or `NULL` if they have never been bound.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":110451,"byte_end":110465,"line_start":296,"line_end":296,"column_start":12,"column_end":26},"name":"query_and_then","qualname":"<Statement<'conn>>::query_and_then","value":"fn <'a, T, E, P, F> (&'a mut self, params: P, f: F) -> Result<AndThenRows<'a, F>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, where the function returns a `Result` with `Error` type\n implementing `std::convert::From<Error>` (so errors can be unified).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":112142,"byte_end":112162,"line_start":349,"line_end":349,"column_start":12,"column_end":32},"name":"query_and_then_named","qualname":"<Statement<'conn>>::query_and_then_named","value":"fn <'a, T, E, F> (&'a mut self, params: &[(&str, &dyn ToSql)], f: F) -> Result<AndThenRows<'a, F>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows. If any parameters that were in the prepared statement\n are not included in\n `params`, they will\n continue to use the most-recently bound value from a previous call\n to `query_named`, or `NULL` if they have never been bound.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":112639,"byte_end":112645,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"exists","qualname":"<Statement<'conn>>::exists","value":"fn <P> (&mut self, params: P) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if a query in the SQL statement it executes returns one\n or more rows and `false` if the SQL returns an empty set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":113370,"byte_end":113379,"line_start":386,"line_end":386,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Statement<'conn>>::query_row","value":"fn <T, P, F> (&mut self, params: P, f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":113899,"byte_end":113907,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Statement<'conn>>::finalize","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the statement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":114213,"byte_end":114228,"line_start":415,"line_end":415,"column_start":12,"column_end":27},"name":"parameter_index","qualname":"<Statement<'conn>>::parameter_index","value":"fn (&self, name: &str) -> Result<Option<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the index of an SQL parameter given its name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":119289,"byte_end":119301,"line_start":564,"line_end":564,"column_start":12,"column_end":24},"name":"expanded_sql","qualname":"<Statement<'conn>>::expanded_sql","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string containing the SQL text of prepared statement with\n bound parameters expanded.\n","sig":null,"attributes":[{"value":"cfg(feature = \"bundled\")","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":119250,"byte_end":119277,"line_start":563,"line_end":563,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":447},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132349,"byte_end":132357,"line_start":8,"line_end":8,"column_start":5,"column_end":13},"name":"Deferred","qualname":"::transaction::TransactionBehavior::Deferred","value":"TransactionBehavior::Deferred","parent":{"krate":0,"index":1068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":449},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132363,"byte_end":132372,"line_start":9,"line_end":9,"column_start":5,"column_end":14},"name":"Immediate","qualname":"::transaction::TransactionBehavior::Immediate","value":"TransactionBehavior::Immediate","parent":{"krate":0,"index":1068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":451},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132378,"byte_end":132387,"line_start":10,"line_end":10,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::transaction::TransactionBehavior::Exclusive","value":"TransactionBehavior::Exclusive","parent":{"krate":0,"index":1068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1068},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132323,"byte_end":132342,"line_start":7,"line_end":7,"column_start":10,"column_end":29},"name":"TransactionBehavior","qualname":"::transaction::TransactionBehavior","value":"TransactionBehavior::{Deferred, Immediate, Exclusive}","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451}],"decl_id":null,"docs":" Options for transaction behavior. See [BEGIN\n TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132314,"byte_end":132390,"line_start":7,"line_end":11,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":453},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132591,"byte_end":132599,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"Rollback","qualname":"::transaction::DropBehavior::Rollback","value":"DropBehavior::Rollback","parent":{"krate":0,"index":1076},"children":[],"decl_id":null,"docs":" Roll back the changes. This is the default.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":455},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132634,"byte_end":132640,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Commit","qualname":"::transaction::DropBehavior::Commit","value":"DropBehavior::Commit","parent":{"krate":0,"index":1076},"children":[],"decl_id":null,"docs":" Commit the changes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":457},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132780,"byte_end":132786,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::transaction::DropBehavior::Ignore","value":"DropBehavior::Ignore","parent":{"krate":0,"index":1076},"children":[],"decl_id":null,"docs":" Do not commit or roll back changes - this will leave the transaction or\n savepoint open, so should be used with care.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":459},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132865,"byte_end":132870,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Panic","qualname":"::transaction::DropBehavior::Panic","value":"DropBehavior::Panic","parent":{"krate":0,"index":1076},"children":[],"decl_id":null,"docs":" Panic. Used to enforce intentional behavior during development.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1076},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132520,"byte_end":132532,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"DropBehavior","qualname":"::transaction::DropBehavior","value":"DropBehavior::{Rollback, Commit, Ignore, Panic}","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459}],"decl_id":null,"docs":" Options for how a Transaction or Savepoint should behave when it is dropped.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132511,"byte_end":132873,"line_start":15,"line_end":28,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":132511,"byte_end":132873,"line_start":15,"line_end":28,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":538},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":133662,"byte_end":133673,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"Transaction","qualname":"::transaction::Transaction","value":"Transaction {  }","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":215}],"decl_id":null,"docs":" Represents a transaction on a database connection.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":540},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":134525,"byte_end":134534,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"Savepoint","qualname":"::transaction::Savepoint","value":"Savepoint {  }","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227}],"decl_id":null,"docs":" Represents a savepoint on a database connection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":134979,"byte_end":134982,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Transaction<'conn>>::new","value":"fn (conn: &mut Connection, behavior: TransactionBehavior) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction. Cannot be nested; see `savepoint` for nested\n transactions.\n Even though we don't mutate the connection, we take a `&mut Connection`\n so as to prevent nested or concurrent transactions on the same\n connection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":136296,"byte_end":136305,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Transaction<'conn>>::savepoint","value":"fn (&mut self) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested\n transactions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":136486,"byte_end":136505,"line_start":139,"line_end":139,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Transaction<'conn>>::savepoint_with_name","value":"fn <T> (&mut self, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new savepoint with a custom savepoint name. See `savepoint()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":136743,"byte_end":136756,"line_start":145,"line_end":145,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Transaction<'conn>>::drop_behavior","value":"fn (&self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the transaction when it is\n dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":136921,"byte_end":136938,"line_start":151,"line_end":151,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Transaction<'conn>>::set_drop_behavior","value":"fn (&mut self, drop_behavior: DropBehavior) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure the transaction to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":137113,"byte_end":137119,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"commit","qualname":"<Transaction<'conn>>::commit","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a transaction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":137369,"byte_end":137377,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Transaction<'conn>>::rollback","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and rolls back a transaction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":137811,"byte_end":137817,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"finish","qualname":"<Transaction<'conn>>::finish","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the transaction, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":139301,"byte_end":139304,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<Savepoint<'conn>>::new","value":"fn (conn: &mut Connection) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint. Can be nested.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":139479,"byte_end":139488,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"with_name","qualname":"<Savepoint<'conn>>::with_name","value":"fn <T> (conn: &mut Connection, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":139671,"byte_end":139680,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Savepoint<'conn>>::savepoint","value":"fn (&mut self) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":139864,"byte_end":139883,"line_start":250,"line_end":250,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Savepoint<'conn>>::savepoint_with_name","value":"fn <T> (&mut self, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":140132,"byte_end":140145,"line_start":256,"line_end":256,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Savepoint<'conn>>::drop_behavior","value":"fn (&self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the savepoint when it is\n dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":140308,"byte_end":140325,"line_start":262,"line_end":262,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Savepoint<'conn>>::set_drop_behavior","value":"fn (&mut self, drop_behavior: DropBehavior) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure the savepoint to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":140498,"byte_end":140504,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"commit","qualname":"<Savepoint<'conn>>::commit","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a savepoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":140968,"byte_end":140976,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Savepoint<'conn>>::rollback","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which rolls back a savepoint.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":141356,"byte_end":141362,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"finish","qualname":"<Savepoint<'conn>>::finish","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the savepoint, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":143069,"byte_end":143080,"line_start":351,"line_end":351,"column_start":12,"column_end":23},"name":"transaction","qualname":"<Connection>::transaction","value":"fn (&mut self) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":143392,"byte_end":143417,"line_start":362,"line_end":362,"column_start":12,"column_end":37},"name":"transaction_with_behavior","qualname":"<Connection>::transaction_with_behavior","value":"fn (&mut self, behavior: TransactionBehavior) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with a specified behavior.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":144503,"byte_end":144512,"line_start":394,"line_end":394,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Connection>::savepoint","value":"fn (&mut self) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with the default behavior (DEFERRED).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":144781,"byte_end":144800,"line_start":405,"line_end":405,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Connection>::savepoint_with_name","value":"fn <T> (&mut self, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a specified name.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":624},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.16.0/src/types/mod.rs","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":634},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":708},{"krate":0,"index":742},{"krate":0,"index":804},{"krate":0,"index":846},{"krate":0,"index":1292},{"krate":0,"index":1298},{"krate":0,"index":1294},{"krate":0,"index":1300},{"krate":0,"index":1310},{"krate":0,"index":1306},{"krate":0,"index":1302},{"krate":0,"index":890}],"decl_id":null,"docs":" Traits dealing with SQLite data types.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":461},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":162333,"byte_end":162344,"line_start":10,"line_end":10,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::types::from_sql::FromSqlError::InvalidType","value":"FromSqlError::InvalidType","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Error when an SQLite value is requested, but the type of the result\n cannot be converted to the requested Rust type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":463},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":162453,"byte_end":162463,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::types::from_sql::FromSqlError::OutOfRange","value":"FromSqlError::OutOfRange(i64)","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Error when the i64 value returned by SQLite cannot be stored into the\n requested type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":467},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":162760,"byte_end":162765,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"Other","qualname":"::types::from_sql::FromSqlError::Other","value":"FromSqlError::Other(Box<dyn Error + Send + Sync>)","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" An error case available for implementors of the `FromSql` trait.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1092},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":162182,"byte_end":162194,"line_start":7,"line_end":7,"column_start":10,"column_end":22},"name":"FromSqlError","qualname":"::types::from_sql::FromSqlError","value":"FromSqlError::{InvalidType, OutOfRange, Other}","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":467}],"decl_id":null,"docs":" Enum listing possible errors from `FromSql` trait.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":668},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":164170,"byte_end":164183,"line_start":62,"line_end":62,"column_start":10,"column_end":23},"name":"FromSqlResult","qualname":"::types::from_sql::FromSqlResult","value":"Result<T, FromSqlError>","parent":null,"children":[],"decl_id":null,"docs":" Result type for implementors of the `FromSql` trait.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":670},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":164900,"byte_end":164907,"line_start":75,"line_end":75,"column_start":11,"column_end":18},"name":"FromSql","qualname":"::types::from_sql::FromSql","value":"FromSql: Sized","parent":null,"children":[{"krate":0,"index":672}],"decl_id":null,"docs":" A trait for types that can be created from a SQLite value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":164924,"byte_end":164937,"line_start":76,"line_end":76,"column_start":8,"column_end":21},"name":"column_result","qualname":"::types::from_sql::FromSql::column_result","value":"fn (value: ValueRef<'_>) -> FromSqlResult<Self>","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":485},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":172416,"byte_end":172424,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::types::to_sql::ToSqlOutput::Borrowed","value":"ToSqlOutput::Borrowed(ValueRef<'a>)","parent":{"krate":0,"index":1122},"children":[],"decl_id":null,"docs":" A borrowed SQLite-representable value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":489},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":172490,"byte_end":172495,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Owned","qualname":"::types::to_sql::ToSqlOutput::Owned","value":"ToSqlOutput::Owned(Value)","parent":{"krate":0,"index":1122},"children":[],"decl_id":null,"docs":" An owned SQLite-representable value.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1122},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":172347,"byte_end":172358,"line_start":10,"line_end":10,"column_start":10,"column_end":21},"name":"ToSqlOutput","qualname":"::types::to_sql::ToSqlOutput","value":"ToSqlOutput::{Borrowed, Owned}","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":489}],"decl_id":null,"docs":" `ToSqlOutput` represents the possible output types for implementors of the\n `ToSql` trait.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":766},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":174481,"byte_end":174486,"line_start":83,"line_end":83,"column_start":11,"column_end":16},"name":"ToSql","qualname":"::types::to_sql::ToSql","value":"ToSql","parent":null,"children":[{"krate":0,"index":768}],"decl_id":null,"docs":" A trait for types that can be converted into SQLite values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":174496,"byte_end":174502,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"to_sql","qualname":"::types::to_sql::ToSql::to_sql","value":"fn (&self) -> Result<ToSqlOutput<'_>>","parent":{"krate":0,"index":766},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":525},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":178866,"byte_end":178870,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":527},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":178915,"byte_end":178922,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":531},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":178979,"byte_end":178983,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value::Value::Real","value":"Value::Real(f64)","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":535},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":179030,"byte_end":179034,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value::Value::Text","value":"Value::Text(String)","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":179084,"byte_end":179088,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value::Value::Blob","value":"Value::Blob(Vec<u8>)","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1234},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":178817,"byte_end":178822,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::value::Value","value":"Value::{Null, Integer, Real, Text, Blob}","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":531},{"krate":0,"index":535},{"krate":0,"index":539}],"decl_id":null,"docs":" Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically\n dictated by SQLite (not by the caller).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180499,"byte_end":180508,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"data_type","qualname":"<Value>::data_type","value":"fn (&self) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":545},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181172,"byte_end":181176,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value_ref::ValueRef::Null","value":"ValueRef::Null","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181221,"byte_end":181228,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value_ref::ValueRef::Integer","value":"ValueRef::Integer(i64)","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181285,"byte_end":181289,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value_ref::ValueRef::Real","value":"ValueRef::Real(f64)","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181336,"byte_end":181340,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value_ref::ValueRef::Text","value":"ValueRef::Text(&'a str)","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181391,"byte_end":181395,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value_ref::ValueRef::Blob","value":"ValueRef::Blob(&'a [u8])","parent":{"krate":0,"index":1274},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1274},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181116,"byte_end":181124,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::types::value_ref::ValueRef","value":"ValueRef::{Null, Integer, Real, Text, Blob}","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":551},{"krate":0,"index":555},{"krate":0,"index":559}],"decl_id":null,"docs":" A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the\n memory backing this value is owned by SQLite.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181107,"byte_end":181408,"line_start":9,"line_end":20,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181445,"byte_end":181454,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"data_type","qualname":"<ValueRef<'a>>::data_type","value":"fn (&self) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181901,"byte_end":181907,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<ValueRef<'a>>::as_i64","value":"fn (&self) -> FromSqlResult<i64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Integer`, returns the integral value. Otherwise,\n returns `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":182209,"byte_end":182215,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<ValueRef<'a>>::as_f64","value":"fn (&self) -> FromSqlResult<f64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Real`, returns the floating point value. Otherwise,\n returns `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":182506,"byte_end":182512,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ValueRef<'a>>::as_str","value":"fn (&self) -> FromSqlResult<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Text`, returns the string value. Otherwise, returns\n `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":182805,"byte_end":182812,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"as_blob","qualname":"<ValueRef<'a>>::as_blob","value":"fn (&self) -> FromSqlResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Blob`, returns the byte slice. Otherwise, returns\n `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1292},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":153020,"byte_end":153024,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"Null","qualname":"::types::Null","value":"","parent":null,"children":[],"decl_id":null,"docs":" Empty struct that can be used to fill in a query parameter as `NULL`.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":153009,"byte_end":153025,"line_start":89,"line_end":89,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":153082,"byte_end":153086,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::Type::Null","value":"Type::Null","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":153092,"byte_end":153099,"line_start":94,"line_end":94,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::Type::Integer","value":"Type::Integer","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":577},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":153105,"byte_end":153109,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::Type::Real","value":"Type::Real","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":153115,"byte_end":153119,"line_start":96,"line_end":96,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::Type::Text","value":"Type::Text","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":153125,"byte_end":153129,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::Type::Blob","value":"Type::Blob","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1300},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":153071,"byte_end":153075,"line_start":92,"line_end":92,"column_start":10,"column_end":14},"name":"Type","qualname":"::types::Type","value":"Type::{Null, Integer, Real, Text, Blob}","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":910},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,118,101,114,115,105,111,110,46,114,115],"byte_start":188685,"byte_end":188699,"line_start":8,"line_end":8,"column_start":8,"column_end":22},"name":"version_number","qualname":"::version::version_number","value":"fn () -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as an integer; e.g., `3016002` for version\n 3.16.2.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":912},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,118,101,114,115,105,111,110,46,114,115],"byte_start":188934,"byte_end":188941,"line_start":15,"line_end":15,"column_start":8,"column_end":15},"name":"version","qualname":"::version::version","value":"fn () -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":916},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3754,"byte_end":3763,"line_start":142,"line_end":142,"column_start":11,"column_end":20},"name":"NO_PARAMS","qualname":"::NO_PARAMS","value":"&[&dyn ToSql]","parent":null,"children":[],"decl_id":null,"docs":" To be used when your statement has no [parameter](https://sqlite.org/lang_expr.html#varparam).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":918},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3850,"byte_end":3856,"line_start":145,"line_end":145,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A typedef of the result returned by many methods.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":920},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3955,"byte_end":3972,"line_start":148,"line_end":148,"column_start":11,"column_end":28},"name":"OptionalExtension","qualname":"::OptionalExtension","value":"OptionalExtension<T>","parent":null,"children":[{"krate":0,"index":922}],"decl_id":null,"docs":" See the [method documentation](#tymethod.optional).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4263,"byte_end":4271,"line_start":154,"line_end":154,"column_start":8,"column_end":16},"name":"optional","qualname":"::OptionalExtension::optional","value":"fn (self) -> Result<Option<T>>","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Converts a `Result<T>` into a `Result<Option<T>>`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":585},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5088,"byte_end":5092,"line_start":185,"line_end":185,"column_start":5,"column_end":9},"name":"Main","qualname":"::DatabaseName::Main","value":"DatabaseName::Main","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" The main database.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":587},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5175,"byte_end":5179,"line_start":188,"line_end":188,"column_start":5,"column_end":9},"name":"Temp","qualname":"::DatabaseName::Temp","value":"DatabaseName::Temp","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":589},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5255,"byte_end":5263,"line_start":191,"line_end":191,"column_start":5,"column_end":13},"name":"Attached","qualname":"::DatabaseName::Attached","value":"DatabaseName::Attached(&'a str)","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":" A database that has been attached via \"ATTACH DATABASE ...\".\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1314},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5038,"byte_end":5050,"line_start":183,"line_end":183,"column_start":10,"column_end":22},"name":"DatabaseName","qualname":"::DatabaseName","value":"DatabaseName::{Main, Temp, Attached}","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589}],"decl_id":null,"docs":" Name for a database within a SQLite connection.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5029,"byte_end":5275,"line_start":183,"line_end":192,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5810,"byte_end":5820,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"Connection","qualname":"::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319}],"decl_id":null,"docs":" A connection to a SQLite database.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6493,"byte_end":6497,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"open","qualname":"<Connection>::open","value":"fn <P> (path: P) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6821,"byte_end":6835,"line_start":245,"line_end":245,"column_start":12,"column_end":26},"name":"open_in_memory","qualname":"<Connection>::open_in_memory","value":"fn () -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7326,"byte_end":7341,"line_start":259,"line_end":259,"column_start":12,"column_end":27},"name":"open_with_flags","qualname":"<Connection>::open_with_flags","value":"fn <P> (path: P, flags: OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8038,"byte_end":8063,"line_start":276,"line_end":276,"column_start":12,"column_end":37},"name":"open_in_memory_with_flags","qualname":"<Connection>::open_in_memory_with_flags","value":"fn (flags: OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9181,"byte_end":9194,"line_start":308,"line_end":308,"column_start":12,"column_end":25},"name":"execute_batch","qualname":"<Connection>::execute_batch","value":"fn (&self, sql: &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to run multiple SQL statements (that cannot take any\n parameters).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10060,"byte_end":10067,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"execute","qualname":"<Connection>::execute","value":"fn <P> (&self, sql: &str, params: P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10989,"byte_end":11002,"line_start":363,"line_end":363,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Connection>::execute_named","value":"fn (&self, sql: &str, params: &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement with\n named parameter(s).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11369,"byte_end":11386,"line_start":372,"line_end":372,"column_start":12,"column_end":29},"name":"last_insert_rowid","qualname":"<Connection>::last_insert_rowid","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the SQLite rowid of the most recent successful INSERT.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12403,"byte_end":12412,"line_start":402,"line_end":402,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Connection>::query_row","value":"fn <T, P, F> (&self, sql: &str, params: P, f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13250,"byte_end":13265,"line_start":425,"line_end":425,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Connection>::query_row_named","value":"fn <T, F> (&self, sql: &str, params: &[(&str, &dyn ToSql)], f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14474,"byte_end":14492,"line_start":460,"line_end":460,"column_start":12,"column_end":30},"name":"query_row_and_then","qualname":"<Connection>::query_row_and_then","value":"fn <T, E, P, F> (&self, sql: &str, params: P, f: F) -> result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row, and execute a mapping via `f` on that returned row with\n the possibility of failure. The `Result` type of `f` must implement\n `std::convert::From<Error>`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15480,"byte_end":15487,"line_start":491,"line_end":491,"column_start":12,"column_end":19},"name":"prepare","qualname":"<Connection>::prepare","value":"fn <'a> (&'a self, sql: &str) -> Result<Statement<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15968,"byte_end":15973,"line_start":504,"line_end":504,"column_start":12,"column_end":17},"name":"close","qualname":"<Connection>::close","value":"fn (self) -> std::result::Result<(), (Connection, Error)>","parent":null,"children":[],"decl_id":null,"docs":" Close the SQLite connection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18951,"byte_end":18957,"line_start":588,"line_end":588,"column_start":19,"column_end":25},"name":"handle","qualname":"<Connection>::handle","value":"fn (&self) -> *mut ffi::sqlite3","parent":null,"children":[],"decl_id":null,"docs":" Get access to the underlying SQLite database connection handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19147,"byte_end":19167,"line_start":594,"line_end":594,"column_start":12,"column_end":32},"name":"get_interrupt_handle","qualname":"<Connection>::get_interrupt_handle","value":"fn (&self) -> InterruptHandle","parent":null,"children":[],"decl_id":null,"docs":" Get access to a handle that can be used to interrupt long running\n queries from another thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19531,"byte_end":19544,"line_start":608,"line_end":608,"column_start":12,"column_end":25},"name":"is_autocommit","qualname":"<Connection>::is_autocommit","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test for auto-commit mode.\n Autocommit mode is on by default.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19726,"byte_end":19733,"line_start":614,"line_end":614,"column_start":12,"column_end":19},"name":"is_busy","qualname":"<Connection>::is_busy","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if all associated prepared statements have been reset.\n","sig":null,"attributes":[{"value":"cfg(feature = \"bundled\")","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19687,"byte_end":19714,"line_start":613,"line_end":613,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1322},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21029,"byte_end":21038,"line_start":648,"line_end":648,"column_start":16,"column_end":25},"name":"OpenFlags","qualname":"::OpenFlags","value":"OpenFlags {  }","parent":null,"children":[{"krate":0,"index":597}],"decl_id":null,"docs":"Flags for opening SQLite database connections.\nSee [sqlite3_open_v2](http://www.sqlite.org/c3ref/open.html) for details.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[60,58,58,98,105,116,102,108,97,103,115,58,58,95,95,98,105,116,102,108,97,103,115,32,109,97,99,114,111,115,62],"byte_start":8564030,"byte_end":8564043,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"structural_match","span":{"file_name":[60,58,58,98,105,116,102,108,97,103,115,58,58,98,105,116,102,108,97,103,115,32,109,97,99,114,111,115,62],"byte_start":8563001,"byte_end":8564096,"line_start":7,"line_end":8,"column_start":25,"column_end":67}},{"value":"rustc_copy_clone_marker","span":{"file_name":[60,58,58,98,105,116,102,108,97,103,115,58,58,98,105,116,102,108,97,103,115,32,109,97,99,114,111,115,62],"byte_start":8563001,"byte_end":8564096,"line_start":7,"line_end":8,"column_start":25,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":1404},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21078,"byte_end":21099,"line_start":649,"line_end":649,"column_start":15,"column_end":36},"name":"SQLITE_OPEN_READ_ONLY","qualname":"::OpenFlags::SQLITE_OPEN_READ_ONLY","value":"OpenFlags","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1406},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21147,"byte_end":21169,"line_start":650,"line_end":650,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_READ_WRITE","qualname":"::OpenFlags::SQLITE_OPEN_READ_WRITE","value":"OpenFlags","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1408},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21217,"byte_end":21235,"line_start":651,"line_end":651,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_CREATE","qualname":"::OpenFlags::SQLITE_OPEN_CREATE","value":"OpenFlags","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1410},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21284,"byte_end":21299,"line_start":652,"line_end":652,"column_start":15,"column_end":30},"name":"SQLITE_OPEN_URI","qualname":"::OpenFlags::SQLITE_OPEN_URI","value":"OpenFlags","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1412},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21339,"byte_end":21357,"line_start":653,"line_end":653,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_MEMORY","qualname":"::OpenFlags::SQLITE_OPEN_MEMORY","value":"OpenFlags","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1414},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21394,"byte_end":21414,"line_start":654,"line_end":654,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NO_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_NO_MUTEX","value":"OpenFlags","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1416},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21462,"byte_end":21484,"line_start":655,"line_end":655,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_FULL_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_FULL_MUTEX","value":"OpenFlags","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1418},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21532,"byte_end":21556,"line_start":656,"line_end":656,"column_start":15,"column_end":39},"name":"SQLITE_OPEN_SHARED_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_SHARED_CACHE","value":"OpenFlags","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1420},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21587,"byte_end":21612,"line_start":657,"line_end":657,"column_start":15,"column_end":40},"name":"SQLITE_OPEN_PRIVATE_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_PRIVATE_CACHE","value":"OpenFlags","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":996},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23137,"byte_end":23165,"line_start":693,"line_end":693,"column_start":15,"column_end":43},"name":"bypass_sqlite_initialization","qualname":"::bypass_sqlite_initialization","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or\n later. If you are running against a SQLite older than that, rusqlite\n attempts to ensure safety by performing configuration and initialization of\n SQLite itself the first time you\n attempt to open a connection. By default, rusqlite panics if that\n initialization fails, since that could mean SQLite has been initialized in\n single-thread mode.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":998},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23726,"byte_end":23753,"line_start":705,"line_end":705,"column_start":15,"column_end":42},"name":"bypass_sqlite_version_check","qualname":"::bypass_sqlite_version_check","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite performs a one-time check that the runtime SQLite version is at\n least as new as the version of SQLite found when rusqlite was built.\n Bypassing this check may be dangerous; e.g., if you use features of SQLite\n that are not present in the runtime\n version. If you are sure the runtime version is compatible with the\n build-time version for your usage, you can bypass the version check by\n calling this function before\n your first connection attempt.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35822,"byte_end":35837,"line_start":1046,"line_end":1046,"column_start":12,"column_end":27},"name":"InterruptHandle","qualname":"::InterruptHandle","value":"InterruptHandle {  }","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":" Allows interrupting a long-running computation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36146,"byte_end":36155,"line_start":1056,"line_end":1056,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<InterruptHandle>::interrupt","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Interrupt the query currently executing on another thread. This will\n cause that query to fail with a `SQLITE3_INTERRUPT` error.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,98,117,115,121,46,114,115],"byte_start":63096,"byte_end":63106,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,98,117,115,121,46,114,115],"byte_start":65734,"byte_end":65749,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":69484,"byte_end":69494,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":71725,"byte_end":71740,"line_start":68,"line_end":68,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":71900,"byte_end":71915,"line_start":76,"line_end":76,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":72046,"byte_end":72061,"line_start":82,"line_end":82,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":72252,"byte_end":72267,"line_start":91,"line_end":91,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":72661,"byte_end":72675,"line_start":106,"line_end":106,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":82844,"byte_end":82849,"line_start":99,"line_end":99,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":82971,"byte_end":82976,"line_start":105,"line_end":105,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":83089,"byte_end":83094,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":85647,"byte_end":85652,"line_start":163,"line_end":163,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":89678,"byte_end":89690,"line_start":11,"line_end":11,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":92230,"byte_end":92242,"line_start":105,"line_end":105,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":92589,"byte_end":92593,"line_start":12,"line_end":12,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":93854,"byte_end":93858,"line_start":49,"line_end":49,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":94211,"byte_end":94215,"line_start":62,"line_end":62,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":94430,"byte_end":94440,"line_start":74,"line_end":74,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":94641,"byte_end":94651,"line_start":83,"line_end":83,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":95119,"byte_end":95130,"line_start":104,"line_end":104,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":95355,"byte_end":95366,"line_start":113,"line_end":113,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":95875,"byte_end":95878,"line_start":134,"line_end":134,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":101169,"byte_end":101178,"line_start":24,"line_end":24,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":119517,"byte_end":119526,"line_start":573,"line_end":573,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":119730,"byte_end":119739,"line_start":581,"line_end":581,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":120071,"byte_end":120080,"line_start":592,"line_end":592,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":120192,"byte_end":120201,"line_start":599,"line_end":599,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":134676,"byte_end":134687,"line_start":89,"line_end":89,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":138332,"byte_end":138343,"line_start":197,"line_end":197,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":138495,"byte_end":138506,"line_start":206,"line_end":206,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":138586,"byte_end":138595,"line_start":212,"line_end":212,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":141862,"byte_end":141871,"line_start":310,"line_end":310,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":142023,"byte_end":142032,"line_start":319,"line_end":319,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":142105,"byte_end":142115,"line_start":325,"line_end":325,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":162822,"byte_end":162834,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":163345,"byte_end":163357,"line_start":39,"line_end":39,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":166611,"byte_end":166617,"line_start":139,"line_end":139,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":166759,"byte_end":166762,"line_start":145,"line_end":145,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":167349,"byte_end":167355,"line_start":166,"line_end":166,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":167584,"byte_end":167589,"line_start":175,"line_end":175,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,105,109,101,46,114,115],"byte_start":169651,"byte_end":169659,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,105,109,101,46,114,115],"byte_start":169924,"byte_end":169932,"line_start":20,"line_end":20,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":172819,"byte_end":172830,"line_start":27,"line_end":27,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":173931,"byte_end":173942,"line_start":68,"line_end":68,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":175573,"byte_end":175579,"line_start":133,"line_end":133,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":175817,"byte_end":175820,"line_start":145,"line_end":145,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":176065,"byte_end":176070,"line_start":157,"line_end":157,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":176193,"byte_end":176199,"line_start":163,"line_end":163,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":176403,"byte_end":176406,"line_start":172,"line_end":172,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":179122,"byte_end":179127,"line_start":21,"line_end":21,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":179211,"byte_end":179216,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":179314,"byte_end":179319,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180117,"byte_end":180122,"line_start":68,"line_end":68,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180210,"byte_end":180215,"line_start":74,"line_end":74,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180303,"byte_end":180308,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180400,"byte_end":180405,"line_start":86,"line_end":86,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180480,"byte_end":180485,"line_start":92,"line_end":92,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181419,"byte_end":181427,"line_start":22,"line_end":22,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181750,"byte_end":181758,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":183011,"byte_end":183016,"line_start":72,"line_end":72,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":183403,"byte_end":183411,"line_start":84,"line_end":84,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":183520,"byte_end":183528,"line_start":90,"line_end":90,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":183639,"byte_end":183647,"line_start":96,"line_end":96,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":153156,"byte_end":153160,"line_start":100,"line_end":100,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4336,"byte_end":4342,"line_start":157,"line_end":157,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5935,"byte_end":5945,"line_start":215,"line_end":215,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5964,"byte_end":5974,"line_start":217,"line_end":217,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6063,"byte_end":6073,"line_start":223,"line_end":223,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19815,"byte_end":19825,"line_start":619,"line_end":619,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21654,"byte_end":21663,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28155,"byte_end":28170,"line_start":814,"line_end":814,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35908,"byte_end":35923,"line_start":1050,"line_end":1050,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35948,"byte_end":35963,"line_start":1051,"line_end":1051,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35973,"byte_end":35988,"line_start":1053,"line_end":1053,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36344,"byte_end":36359,"line_start":1064,"line_end":1064,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3456,"byte_end":3461,"line_start":133,"line_end":133,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":624}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,98,117,115,121,46,114,115],"byte_start":63096,"byte_end":63106,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,98,117,115,121,46,114,115],"byte_start":65734,"byte_end":65749,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":69484,"byte_end":69494,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":71725,"byte_end":71740,"line_start":68,"line_end":68,"column_start":23,"column_end":38},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":178},"to":{"krate":2,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":71900,"byte_end":71915,"line_start":76,"line_end":76,"column_start":26,"column_end":41},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":178},"to":{"krate":2,"index":1934}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":72046,"byte_end":72061,"line_start":82,"line_end":82,"column_start":22,"column_end":37},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":178},"to":{"krate":2,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":72252,"byte_end":72267,"line_start":91,"line_end":91,"column_start":13,"column_end":28},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,99,97,99,104,101,46,114,115],"byte_start":72661,"byte_end":72675,"line_start":106,"line_end":106,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":82844,"byte_end":82849,"line_start":99,"line_end":99,"column_start":31,"column_end":36},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":82971,"byte_end":82976,"line_start":105,"line_end":105,"column_start":37,"column_end":42},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":83089,"byte_end":83094,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":1056},"to":{"krate":2,"index":8150}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":85647,"byte_end":85652,"line_start":163,"line_end":163,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":1056},"to":{"krate":1,"index":2464}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":89678,"byte_end":89690,"line_start":11,"line_end":11,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":1062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,97,119,95,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":92230,"byte_end":92242,"line_start":105,"line_end":105,"column_start":15,"column_end":27},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":92589,"byte_end":92593,"line_start":12,"line_end":12,"column_start":13,"column_end":17},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":93854,"byte_end":93858,"line_start":49,"line_end":49,"column_start":13,"column_end":17},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":94211,"byte_end":94215,"line_start":62,"line_end":62,"column_start":22,"column_end":26},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":328},"to":{"krate":2,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":94430,"byte_end":94440,"line_start":74,"line_end":74,"column_start":19,"column_end":29},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":94641,"byte_end":94651,"line_start":83,"line_end":83,"column_start":32,"column_end":42},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":346},"to":{"krate":2,"index":3908}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":95119,"byte_end":95130,"line_start":104,"line_end":104,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":95355,"byte_end":95366,"line_start":113,"line_end":113,"column_start":35,"column_end":46},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3908}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,114,111,119,46,114,115],"byte_start":95875,"byte_end":95878,"line_start":134,"line_end":134,"column_start":17,"column_end":20},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":101169,"byte_end":101178,"line_start":24,"line_end":24,"column_start":13,"column_end":22},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":119517,"byte_end":119526,"line_start":573,"line_end":573,"column_start":36,"column_end":45},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":456},"to":{"krate":2,"index":2610}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":119730,"byte_end":119739,"line_start":581,"line_end":581,"column_start":28,"column_end":37},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":456},"to":{"krate":2,"index":8146}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":120071,"byte_end":120080,"line_start":592,"line_end":592,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":456},"to":{"krate":2,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,115,116,97,116,101,109,101,110,116,46,114,115],"byte_start":120192,"byte_end":120201,"line_start":599,"line_end":599,"column_start":13,"column_end":22},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":134676,"byte_end":134687,"line_start":89,"line_end":89,"column_start":13,"column_end":24},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":138332,"byte_end":138343,"line_start":197,"line_end":197,"column_start":23,"column_end":34},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":538},"to":{"krate":2,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":138495,"byte_end":138506,"line_start":206,"line_end":206,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":538},"to":{"krate":2,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":138586,"byte_end":138595,"line_start":212,"line_end":212,"column_start":13,"column_end":22},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":141862,"byte_end":141871,"line_start":310,"line_end":310,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":540},"to":{"krate":2,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":142023,"byte_end":142032,"line_start":319,"line_end":319,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":540},"to":{"krate":2,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,114,97,110,115,97,99,116,105,111,110,46,114,115],"byte_start":142105,"byte_end":142115,"line_start":325,"line_end":325,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":162822,"byte_end":162834,"line_start":25,"line_end":25,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":8150}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":163345,"byte_end":163357,"line_start":39,"line_end":39,"column_start":16,"column_end":28},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":1092},"to":{"krate":1,"index":2464}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":164909,"byte_end":164914,"line_start":75,"line_end":75,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1678},"to":{"krate":0,"index":670}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":166611,"byte_end":166617,"line_start":139,"line_end":139,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":5,"index":5538},"to":{"krate":0,"index":670}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":166759,"byte_end":166762,"line_start":145,"line_end":145,"column_start":18,"column_end":21},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":5,"index":4534},"to":{"krate":0,"index":670}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":167349,"byte_end":167355,"line_start":166,"line_end":166,"column_start":30,"column_end":36},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":2,"index":41306},"to":{"krate":0,"index":670}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,102,114,111,109,95,115,113,108,46,114,115],"byte_start":167584,"byte_end":167589,"line_start":175,"line_end":175,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1234},"to":{"krate":0,"index":670}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,105,109,101,46,114,115],"byte_start":169651,"byte_end":169659,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":15,"index":580},"to":{"krate":0,"index":766}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,105,109,101,46,114,115],"byte_start":169924,"byte_end":169932,"line_start":20,"line_end":20,"column_start":24,"column_end":32},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":15,"index":580},"to":{"krate":0,"index":670}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":172819,"byte_end":172830,"line_start":27,"line_end":27,"column_start":37,"column_end":48},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1122},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":173931,"byte_end":173942,"line_start":68,"line_end":68,"column_start":20,"column_end":31},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":1122},"to":{"krate":0,"index":766}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":175573,"byte_end":175579,"line_start":133,"line_end":133,"column_start":16,"column_end":22},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":5,"index":5538},"to":{"krate":0,"index":766}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":175817,"byte_end":175820,"line_start":145,"line_end":145,"column_start":16,"column_end":19},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":5,"index":4534},"to":{"krate":0,"index":766}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":176065,"byte_end":176070,"line_start":157,"line_end":157,"column_start":16,"column_end":21},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":1234},"to":{"krate":0,"index":766}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":176193,"byte_end":176199,"line_start":163,"line_end":163,"column_start":26,"column_end":32},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":2,"index":41306},"to":{"krate":0,"index":766}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,116,111,95,115,113,108,46,114,115],"byte_start":176403,"byte_end":176406,"line_start":172,"line_end":172,"column_start":20,"column_end":23},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":5,"index":3492},"to":{"krate":0,"index":766}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":179122,"byte_end":179127,"line_start":21,"line_end":21,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":179211,"byte_end":179216,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":179314,"byte_end":179319,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180117,"byte_end":180122,"line_start":68,"line_end":68,"column_start":20,"column_end":25},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180210,"byte_end":180215,"line_start":74,"line_end":74,"column_start":20,"column_end":25},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180303,"byte_end":180308,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180400,"byte_end":180405,"line_start":86,"line_end":86,"column_start":24,"column_end":29},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,46,114,115],"byte_start":180480,"byte_end":180485,"line_start":92,"line_end":92,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":0,"index":1234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181419,"byte_end":181427,"line_start":22,"line_end":22,"column_start":10,"column_end":18},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":181750,"byte_end":181758,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":183011,"byte_end":183016,"line_start":72,"line_end":72,"column_start":33,"column_end":38},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":1234},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":183403,"byte_end":183411,"line_start":84,"line_end":84,"column_start":28,"column_end":36},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":183520,"byte_end":183528,"line_start":90,"line_end":90,"column_start":29,"column_end":37},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,118,97,108,117,101,95,114,101,102,46,114,115],"byte_start":183639,"byte_end":183647,"line_start":96,"line_end":96,"column_start":30,"column_end":38},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,116,121,112,101,115,47,109,111,100,46,114,115],"byte_start":153156,"byte_end":153160,"line_start":100,"line_end":100,"column_start":23,"column_end":27},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":8150}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4336,"byte_end":4342,"line_start":157,"line_end":157,"column_start":34,"column_end":40},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":0,"index":918},"to":{"krate":0,"index":920}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5935,"byte_end":5945,"line_start":215,"line_end":215,"column_start":22,"column_end":32},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":0,"index":934},"to":{"krate":2,"index":1672}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5964,"byte_end":5974,"line_start":217,"line_end":217,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":934},"to":{"krate":2,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6063,"byte_end":6073,"line_start":223,"line_end":223,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19815,"byte_end":19825,"line_start":619,"line_end":619,"column_start":21,"column_end":31},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":934},"to":{"krate":2,"index":8146}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21654,"byte_end":21663,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":1322},"to":{"krate":2,"index":2592}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28155,"byte_end":28170,"line_start":814,"line_end":814,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35908,"byte_end":35923,"line_start":1050,"line_end":1050,"column_start":22,"column_end":37},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":1672}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35948,"byte_end":35963,"line_start":1051,"line_end":1051,"column_start":22,"column_end":37},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35973,"byte_end":35988,"line_start":1053,"line_end":1053,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[90]},"from":{"krate":0,"index":1034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,113,108,105,116,101,45,48,46,49,54,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36344,"byte_end":36359,"line_start":1064,"line_end":1064,"column_start":15,"column_end":30},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":986},"to":{"krate":2,"index":1950}}]}
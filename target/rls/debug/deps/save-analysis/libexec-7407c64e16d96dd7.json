{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49],"program":"/home/chivier_humber/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","exec","/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=7407c64e16d96dd7","-C","extra-filename=-7407c64e16d96dd7","--out-dir","/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/deps","-L","dependency=/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/deps","--extern","errno=/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/deps/liberrno-1cda700c9337e02c.rmeta","--extern","libc=/home/chivier_humber/Documents/Study/OSH_LAB/lab2/rustshell/target/rls/debug/deps/liblibc-61b3b03f73201e0d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/chivier_humber/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,68,111,99,117,109,101,110,116,115,47,83,116,117,100,121,47,79,83,72,95,76,65,66,47,108,97,98,50,47,114,117,115,116,115,104,101,108,108,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,101,120,101,99,45,55,52,48,55,99,54,52,101,49,54,100,57,54,100,100,55,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"exec","disambiguator":[13914021626625393753,9430811301196170142]},"crate_root":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src","external_crates":[{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[853209657226342047,8462664850197014382]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[772178867720458397,10513760593670507587]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17633954781163668134,3962627684191718065]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7858001605524721373,8369385247697161108]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5226771781757675641,11183407964508506038]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15950205559580256541,6605390554280573401]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[5066653915378193616,7813142097187859454]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[1328488228804362593,9042026925657904388]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[3005442698276396085,7194037300925619286]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[11662190156692096384,12505544175813687064]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":11,"id":{"name":"errno","disambiguator":[15150332555949182948,15398581291108105609]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","num":12,"id":{"name":"libc","disambiguator":[10729967568209802492,6456757852286002863]}}],"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":5592,"line_start":1,"line_end":179,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":5592,"line_start":1,"line_end":179,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/exec-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":30},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62}],"decl_id":null,"docs":" A simple wrapper around the C library's `execvp` function.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":33},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1105,"byte_end":1116,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"name":"BadArgument","qualname":"::Error::BadArgument","value":"Error::BadArgument(NulError)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" One of the strings passed to `execv` contained an internal null byte\n and can't be passed correctly to C.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":37},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1177,"byte_end":1182,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Errno","qualname":"::Error::Errno","value":"Error::Errno(Errno)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" An error was returned by the system.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":972,"byte_end":977,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{BadArgument, Errno}","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":37}],"decl_id":null,"docs":" Represents an error calling `exec`.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":951,"byte_end":962,"line_start":28,"line_end":28,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3060,"byte_end":3066,"line_start":97,"line_end":97,"column_start":8,"column_end":14},"name":"execvp","qualname":"::execvp","value":"fn <S, I> (program: S, args: I) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Run `program` with `args`, completely replacing the currently running\n program.  If it returns at all, it always returns an error.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4361,"byte_end":4368,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"Command","qualname":"::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" Build a command to execute.  This has an API which is deliberately\n similar to `std::process::Command`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4637,"byte_end":4640,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"fn <S> (program: S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Create a new command builder, specifying the program to run.  The\n program will be searched for using the usual rules for `PATH`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4852,"byte_end":4855,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"fn <S> (&mut self, arg: S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Add an argument to the command builder.  This can be chained.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5254,"byte_end":5258,"line_start":167,"line_end":167,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"fn <S> (&mut self, args: &[S]) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Add multiple arguments to the command builder.  This can be\n chained.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5516,"byte_end":5520,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"exec","qualname":"<Command>::exec","value":"fn (&mut self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Execute the command we built.  If this function succeeds, it will\n never return.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1216,"byte_end":1221,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1618,"byte_end":1623,"line_start":52,"line_end":52,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1951,"byte_end":1956,"line_start":63,"line_end":63,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4471,"byte_end":4478,"line_start":143,"line_end":143,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1216,"byte_end":1221,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":72},"to":{"krate":1,"index":2464}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1618,"byte_end":1623,"line_start":52,"line_end":52,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":72},"to":{"krate":2,"index":8150}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1951,"byte_end":1956,"line_start":63,"line_end":63,"column_start":25,"column_end":30},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":72},"to":{"krate":2,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,120,101,99,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4471,"byte_end":4478,"line_start":143,"line_end":143,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}}]}